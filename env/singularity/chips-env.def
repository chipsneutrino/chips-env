Bootstrap: docker
From: registry.gitlab.com/chipsneutrino/chips-env:latest

%labels
    Author Josh Tingey
    Email j.tingey.16@ucl.ac.uk
    Version v1.0

%help
    This is the main chips-env container used to build and run all chips software
 
%post  
    # Remove the build script left over from the docker build
    rm /opt/deps.sh

    # Set python3 as the default python
    ln -sf /usr/bin/python3 /usr/bin/python

    # Setup root style
    echo "Rint.Logon: /opt/chips-env/scripts/style/chips_style.C" >> /usr/local/etc/system.rootrc

    # Locale settings
    echo 'LANG="en_GB.UTF-8"' >> /etc/environment
    echo 'LC_ALL="en_GB.UTF-8"' >> /etc/environment
    echo 'LC_CTYPE="en_GB.UTF-8"' >> /etc/environment
    echo 'LANGUAGE="en_GB.UTF-8"' >> /etc/environment

%environment
    # Set the chips-env path that is mounted into the container
    export CHIPSENV=/opt/chips-env

    # Setup the compiler and activate root
    source /opt/gcc-9/activate.sh
    source /usr/local/bin/thisroot.sh
    source /usr/local/bin/geant4.sh

    # Setup GENIE
    export GENIE=/opt/genie
    export LD_LIBRARY_PATH=$GENIE/lib:$LD_LIBRARY_PATH
    export CPLUS_INCLUDE_PATH=$GENIE/include:$CPLUS_INCLUDE_PATH
    export PATH=$GENIE/bin:$PATH

    # Add chips-gen, chips-sim and chips-reco paths to environment
    export CHIPSGEN=$CHIPSENV/chips/chips-gen
    export CHIPSSIM=$CHIPSENV/chips/chips-sim
    export CHIPSRECO=$CHIPSENV/chips/chips-reco

    # Append library, includes and bin paths
    export LD_LIBRARY_PATH=$CHIPSGEN:$CHIPSSIM:$CHIPSRECO:$LD_LIBRARY_PATH
    export CPLUS_INCLUDE_PATH=$CHIPSGEN/include:$CHIPSSIM/include:$CHIPSRECO/include:$CPLUS_INCLUDE_PATH
    export PATH=$CHIPSGEN:$CHIPSSIM:$CHIPSRECO:$PATH

    # Set flags so make uses all the cores available
    NB_CORES=$(grep -c '^processor' /proc/cpuinfo)
    export MAKEFLAGS="-j$((NB_CORES+1)) -l${NB_CORES}"

    # Need to set CRY environment variables for chips-gen
    export CRYDIR=/usr/local
    export CRYDATA=/usr/local/share/cry-data
    
    # Need to set these options for chips-sim visualisation
    export G4VIS_USE=1
    export G4VIS_USE_OPENGLQT=1

%apprun build
    cmake $@ .
    make

%apprun make
    make $@

%apprun clean
    cd $CHIPSENV
    make clean
    rm ./cmake_install.cmake
    rm ./CMakeCache.txt
    rm -r ./CMakeFiles
    rm ./Makefile
    rm ./chips/cmake_install.cmake
    rm -r ./chips/CMakeFiles
    rm ./chips/Makefile
    source chips/chips-gen/gen-tidy.sh
    source chips/chips-sim/sim-tidy.sh
    source chips/chips-reco/reco-tidy.sh

%apprun cosmicgen
    cosmicgen $CHIPSGEN/config/default.conf $@ > cosmicgen.vec

%apphelp cosmicgen
    cosmicgen - cosmic event generator using CRY

    Usage:
        chips cosmicgen [num_events] [geometry] [seed] [beam_dir_cut]

    Example:
        chips cosmicgen 1000 chips_1200 4 0

    Outputs:
        A file called cosmicgen.vec in the current directory

%apprun beamgen
    gevgen -t 1000080160[0.8879],1000010010[0.1121] -r 0 \
        -f $CHIPSGEN/config/chips_location_flux.root,enufullfine_nue_allpar_NoXSec_CHIPSoffAXIS \
        --cross-sections $CHIPSGEN/config/xsecs.xml \
        --message-thresholds $GENIE/config/Messenger_laconic.xml $@
    chips gntpc -i gntp.0.ghep.root -f nuance_tracker -o beamgen.vec

%apphelp beamgen
    beamgen - beam event generator using GENIE

    Usage:
        chips beamgen -n [num_events] -e [energy_range] -e [particle] --seed [seed] --event-generator-list [generation_list]

    Example:
        chips beamgen -n 100000 -e 0.5,15 -p 12 --seed 4 --event-generator-list Default+CCMEC+NCMEC

    Outputs:
        A file called beamgen.vec in the current directory

%apprun chipssim
    chipssim -g $CHIPSSIM/config/geom/$@

%apphelp chipssim
    chipssim - detector simulation using chips-sim

    Usage:
        chips chipssim -g [geometry_macro] [command_macro]

    Example:
        chips chipssim -g chips_1200.mac generic_chips.mac

%apprun simdisplay
    simdisplay

%apphelp simdisplay
    simdisplay - simulation event display

    Usage:
        chips simdisplay

%apprun recodisplay
    recodisplay

%apphelp recodisplay
    recodisplay - reconstruction event display

    Usage:
        chips recodisplay

%apprun root
    root $@

%apprun python
    python $@
    




